image: 'appirio/dx:latest'
stages:
  - cleanup
  - quality_scan
  - publish
  - review
  - refresh
  - delete
  - merge_request
  - install-staging
  - install-prod
variables:
  CACHE_DIR: .tmpCacheDir
  SCRATCH_ORG_ALIAS: reviewApp
sonarqube_scan:
  stage: quality_scan
  script:
    - >-
      sonar-scanner -Dsonar.sources=. -Dsonar.login=$SONAR_LOGIN
      -Dsonar.gitlab.project_id=$CI_PROJECT_ID
      -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHA
      -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME -Dsonar.analysis.mode=preview
  only:
    - /^feature\/.*/
  except:
    - tags
    - schedules
sonarqube_scan_publish:
  stage: quality_scan
  script:
    - >-
      sonar-scanner -Dsonar.sources=. -Dsonar.login=$SONAR_LOGIN
      -Dsonar.projectVersion=$CI_COMMIT_TAG -Dsonar.analysis.mode=publish
  only:
    - master
  except:
    - tags
    - schedules
make_review_app:
  stage: review
  when: manual
  script:
    - 'adx ci:shell --script createOrUpdateScratchOrg.sh'
  environment:
    name: review-apps/$CI_COMMIT_REF_NAME
    on_stop: stop_review_app
  cache: &ref_0
    key: $CI_COMMIT_REF_SLUG
    paths:
      - $CACHE_DIR
  only: &ref_1
    - /^feature\/.*/
  except: &ref_2
    - tags
    - schedules
refresh_review_app:
  stage: refresh
  when: manual
  script:
    - 'adx ci:shell --script refreshAccessToScratchOrg.sh'
  environment:
    name: review-apps/$CI_COMMIT_REF_NAME
  cache: *ref_0
  only: *ref_1
  except: *ref_2
stop_review_app:
  stage: delete
  when: manual
  script:
    - 'adx ci:shell --script deleteScratchOrg.sh'
  environment:
    name: review-apps/$CI_COMMIT_REF_NAME
    action: stop
  cache: *ref_0
  only: *ref_1
  except: *ref_2
version_package:
  stage: publish
  script:
    - 'adx sfdx:package:publish --installationkeybypass'
  only:
    - master
  except:
    - schedules
install_to_UAT:
  stage: install-staging
  environment:
    name: UAT
  when: manual
  script: 'adx sfdx:package:install --installationkeybypass --destination UAT'
  only: &ref_3
    - master
  except: &ref_4
    - schedules
install_to_PROD:
  stage: install-prod
  environment:
    name: Production
  when: manual
  script: >-
    adx sfdx:package:install --installationkeybypass --destination PROD
    --release
  only: *ref_3
  except: *ref_4
cleanup:
  stage: cleanup
  variables:
    GIT_STRATEGY: clone
  script:
    - 'adx ci:shell --script cleanUp.sh --arguments master'
  only:
    - schedules
